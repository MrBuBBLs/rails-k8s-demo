name: Deploy
on:
  push:
    branches:
      - master

jobs:
  experiment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE="registry.digitalocean.com/lewagon/rails-k8s-demo-seatrain"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG} 
          echo ::set-output name=tag::${TAG}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to Digital Ocean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Copy master key from a secret
        run: echo ${{ secrets.RAILS_MASTER_KEY }} > config/master.key

      - name: Build and push production image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .seatrain/Dockerfile.prod
          push: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            RUBY_VERSION=2.6.6
            PG_MAJOR=12
            NODE_MAJOR=12
            YARN_VERSION=1.22.5
            BUNDLER_VERSION=2.1.4

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save seatrain-test

      - name: Deploy to cluster
        run: >
          helm
          upgrade
          rails-k8s-demo
          .seatrain/helm
          --install
          --create-namespace
          --namespace
          default
          --atomic
          --cleanup-on-fail
          --timeout=3m0s
          --set-string global.commonSecrets.DATABASE_URL=${{ secrets.DATABASE_URL }}
          --set-string global.image.tag=${{ steps.prep.outputs.tag }}
