name: Experimenting with Seatrain
on:
  push:
    branches:
      - dev/seatrain

jobs:
  experiment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE="quay.io/lewagon/rails-k8s-demo-seatrain"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG} 
          echo ::set-output name=tag::${TAG}

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Cache bundle
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle install
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Copy master key from a secret
        run: echo ${{ secrets.RAILS_MASTER_KEY }} > config/master.key

      - name: Build and push production image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .seatrain/Dockerfile.prod
          push: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig show seatrain-demo > $GITHUB_WORKSPACE/.kubeconfig

      - name: Deploy from seatrain
        run: >
          SEATRAIN_SECRETS__DATABASE_URL=${{ secrets.DB_URL }}
          rails 
          seatrain:release:deploy 
          tag=${{ steps.prep.outputs.tag }}
      # - name: Deploy to cluster
      #   run: >
      #     export KUBECONFIG=$GITHUB_WORKSPACE/.kubeconfig &&
      #     helm upgrade rails-k8s-demo .seatrain/helm --install --create-namespace --namespace default
      #     --atomic --cleanup-on-fail --timeout=3m0s
      #     --set-string global.image.tag=${{ steps.prep.outputs.tag }}
      #     --set-string global.commonSecrets.DATABASE_URL=${{ secrets.DB_URL }}
